let str = `Hello`;

// the first character
alert( str[0] ); // H
alert( str.at(0) ); // H

// the last character
alert( str[str.length - 1] ); // o
alert( str.at(-1) );

///////////////////////////////////////////


for (let char of "Hello") {
  alert(char); // H,e,l,l,o (char becomes "H", then "e", then "l" etc)
}
/////////////////////////////////////////////////////////

alert( 'Interface'[0].toLowerCase() ); // 'i'
/////////////////////////////////////////////////////////

let str = 'Widget with id';

alert( str.indexOf('Widget') ); // 0, because 'Widget' is found at the beginning
alert( str.indexOf('widget') ); // -1, not found, the search is case-sensitive

alert( str.indexOf("id") ); // 1, "id" is found at the position 1 (..idget with id)
/////////////////////////////////////////////////////////////


let str = 'Widget with id';

alert( str.indexOf('id', 2) ) // 12
/////////////////////////////////////////////////////////////
let str = 'As sly as a fox, as strong as an ox';

let target = 'as'; // let's look for it

let pos = 0;
while (true) {
  let foundPos = str.indexOf(target, pos);
  if (foundPos == -1) break;

  alert( `Found at ${foundPos}` );
  pos = foundPos + 1; // continue the search from the next position
}
/////////////////////////////////////////////////////////////

let str = "As sly as a fox, as strong as an ox";
let target = "as";

let pos = -1;
while ((pos = str.indexOf(target, pos + 1)) != -1) {
  alert( pos );
}


/////////////////////////////////////////////////////////////
str.lastIndexOf(substr, position)

There are 3 methods in JavaScript to get a substring: substring, substr and slice.


let str = "stringify";
alert( str.slice(0, 5) ); // 'strin', the substring from 0 to 5 (not including 5)
alert( str.slice(0, 1) ); // 's', from 0 to 1, but not including 1, so only character at 0



let str = "stringify";
// start at the 4th position from the right, end at the 1st from the right
alert( str.slice(-4, -1) ); // 'gif'
/////////////////////////////////////////////////////////////


let str = "stringify";

// these are same for substring
alert( str.substring(2, 6) ); // "ring"
alert( str.substring(6, 2) ); // "ring"

// ...but not for slice:
alert( str.slice(2, 6) ); // "ring" (the same)
alert( str.slice(6, 2) ); // "" (an empty string)

Negative arguments are (unlike slice) not supported, they are treated as 0.
/////////////////////////////////////////////////////////////


let str = "stringify";
alert( str.substr(2, 4) ); // 'ring', from the 2nd position get 4 characters
/////////////////////////////////////////////////////////////


let str = "stringify";
alert( str.substr(-4, 2) ); // 'gi', from the 4th position get 2 characters
/////////////////////////////////////////////////////////////


method	selects…	negatives
slice(start, end)	from start to end (not including end)	allows negatives
substring(start, end)	between start and end (not including end)	negative values mean 0
substr(start, length)	from start get length characters	allows negative start


/////////////////////////////////////////////////////////////

So, for practical use it’s enough to remember only slice.
/////////////////////////////////////////////////////////////
